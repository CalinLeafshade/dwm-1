From bf32fb540c8980f17dd97455cbbe3370ae5c64d4 Mon Sep 17 00:00:00 2001
From: Gerardo Orellana <goaccess@prosoftcorp.com>
Date: Fri, 4 Oct 2013 18:47:15 -0500
Subject: [PATCH] added pertag functionality

---
 dwm.c | 111 ++++++++++++++++++++++++++++++++++++++++++++++++------------------
 1 file changed, 81 insertions(+), 30 deletions(-)

diff --git a/dwm.c b/dwm.c
index a3688ed..20cdff9 100644
--- a/dwm.c
+++ b/dwm.c
@@ -139,28 +139,6 @@ typedef struct
    void (*arrange) (Monitor *);
 } Layout;
 
-struct Monitor
-{
-   char ltsymbol[16];
-   float mfact;
-   int nmaster;
-   int num;
-   int by;                      /* bar geometry */
-   int mx, my, mw, mh;          /* screen size */
-   int wx, wy, ww, wh;          /* window area  */
-   unsigned int seltags;
-   unsigned int sellt;
-   unsigned int tagset[2];
-   Bool showbar;
-   Bool topbar;
-   Client *clients;
-   Client *sel;
-   Client *stack;
-   Monitor *next;
-   Window barwin;
-   const Layout *lt[2];
-};
-
 typedef struct
 {
    const char *class;
@@ -305,6 +283,34 @@ static int gap;
 /* configuration, allows nested code to access above variables */
 #include "config.h"
 
+struct Monitor
+{
+   char ltsymbol[16];
+   float mfact;
+   int nmaster;
+   int num;
+   int by;                      /* bar geometry */
+   int mx, my, mw, mh;          /* screen size */
+   int wx, wy, ww, wh;          /* window area  */
+   unsigned int seltags;
+   unsigned int sellt;
+   unsigned int tagset[2];
+   Bool showbar;
+   Bool topbar;
+   Client *clients;
+   Client *sel;
+   Client *stack;
+   Monitor *next;
+   Window barwin;
+   const Layout *lt[2];
+   int curtag;
+   int prevtag;
+   const Layout *lts[LENGTH (tags) + 1];
+   float mfacts[LENGTH (tags) + 1];
+   int nmasters[LENGTH (tags) + 1];
+   Bool showbars[LENGTH (tags) + 1];
+};
+
 /* compile-time check if all tags fit into an unsigned int bit array. */
 struct NumTags
 {
@@ -685,6 +691,7 @@ Monitor *
 createmon (void)
 {
    Monitor *m;
+   unsigned int i;
 
    if (!(m = (Monitor *) calloc (1, sizeof (Monitor))))
       die ("fatal: could not malloc() %u bytes\n", sizeof (Monitor));
@@ -696,6 +703,15 @@ createmon (void)
    m->lt[0] = &layouts[0];
    m->lt[1] = &layouts[1 % LENGTH (layouts)];
    strncpy (m->ltsymbol, layouts[0].symbol, sizeof m->ltsymbol);
+   /* pertag init */
+   m->curtag = m->prevtag = 1;
+   for (i = 0; i < LENGTH (tags) + 1; i++) {
+      m->mfacts[i] = mfact;
+      m->nmasters[i] = nmaster;
+      m->lts[i] = &layouts[0];
+      m->showbars[i] = m->showbar;
+   }
+
    return m;
 }
 
@@ -775,8 +791,8 @@ drawbar (Monitor * m)
    for (i = 0; i < LENGTH (tags); i++) {
       dc.w = TEXTW (tags[i]);
       col =
-         dc.colors[(m->
-                    tagset[m->seltags] & 1 << i) ? 1 : (urg & 1 << i ? 2 : 0)];
+         dc.
+         colors[(m->tagset[m->seltags] & 1 << i) ? 1 : (urg & 1 << i ? 2 : 0)];
       drawtext (tags[i], col, True);
       drawsquare (m == selmon && selmon->sel &&
                   selmon->sel->tags & 1 << i, occ & 1 << i, col);
@@ -1118,7 +1134,8 @@ grabkeys (void)
 void
 incnmaster (const Arg * arg)
 {
-   selmon->nmaster = MAX (selmon->nmaster + arg->i, 0);
+   selmon->nmasters[selmon->curtag] = MAX (selmon->nmaster + arg->i, 1);
+   selmon->nmaster = selmon->nmasters[selmon->curtag];
    arrange (selmon);
 }
 
@@ -1700,7 +1717,8 @@ setlayout (const Arg * arg)
    if (!arg || !arg->v || arg->v != selmon->lt[selmon->sellt])
       selmon->sellt ^= 1;
    if (arg && arg->v)
-      selmon->lt[selmon->sellt] = (Layout *) arg->v;
+      selmon->lt[selmon->sellt] = selmon->lts[selmon->curtag] =
+         (Layout *) arg->v;
    strncpy (selmon->ltsymbol, selmon->lt[selmon->sellt]->symbol,
             sizeof selmon->ltsymbol);
    if (selmon->sel)
@@ -1720,7 +1738,7 @@ setmfact (const Arg * arg)
    f = arg->f < 1.0 ? arg->f + selmon->mfact : arg->f - 1.0;
    if (f < 0.1 || f > 0.9)
       return;
-   selmon->mfact = f;
+   selmon->mfact = selmon->mfacts[selmon->curtag] = f;
    arrange (selmon);
 }
 
@@ -1904,7 +1922,7 @@ tile (Monitor * m)
 void
 togglebar (const Arg * arg)
 {
-   selmon->showbar = !selmon->showbar;
+   selmon->showbar = selmon->showbars[selmon->curtag] = !selmon->showbar;
    updatebarpos (selmon);
    XMoveResizeWindow (dpy, selmon->barwin, selmon->wx, selmon->by, selmon->ww,
                       bh);
@@ -1926,13 +1944,28 @@ togglefloating (const Arg * arg)
 void
 toggletag (const Arg * arg)
 {
-   unsigned int newtags;
+   unsigned int i, newtags;
 
    if (!selmon->sel)
       return;
    newtags = selmon->sel->tags ^ (arg->ui & TAGMASK);
    if (newtags) {
       selmon->sel->tags = newtags;
+      if (newtags == ~0) {
+         selmon->prevtag = selmon->curtag;
+         selmon->curtag = 0;
+      }
+      if (!(newtags & 1 << (selmon->curtag - 1))) {
+         selmon->prevtag = selmon->curtag;
+         for (i = 0; !(newtags & 1 << i); i++);
+         selmon->curtag = i + 1;
+      }
+      selmon->sel->tags = newtags;
+      selmon->lt[selmon->sellt] = selmon->lts[selmon->curtag];
+      selmon->mfact = selmon->mfacts[selmon->curtag];
+      selmon->nmaster = selmon->nmasters[selmon->curtag];
+      if (selmon->showbar != selmon->showbars[selmon->curtag])
+         togglebar (NULL);
       focus (NULL);
       arrange (selmon);
    }
@@ -2229,11 +2262,29 @@ updatewmhints (Client * c)
 void
 view (const Arg * arg)
 {
+   unsigned int i;
    if ((arg->ui & TAGMASK) == selmon->tagset[selmon->seltags])
       return;
    selmon->seltags ^= 1;        /* toggle sel tagset */
-   if (arg->ui & TAGMASK)
+   if (arg->ui & TAGMASK) {
       selmon->tagset[selmon->seltags] = arg->ui & TAGMASK;
+      selmon->prevtag = selmon->curtag;
+      if (arg->ui == ~0)
+         selmon->curtag = 0;
+      else {
+         for (i = 0; !(arg->ui & 1 << i); i++);
+         selmon->curtag = i + 1;
+      }
+   } else {
+      selmon->prevtag = selmon->curtag ^ selmon->prevtag;
+      selmon->curtag ^= selmon->prevtag;
+      selmon->prevtag = selmon->curtag ^ selmon->prevtag;
+   }
+   selmon->lt[selmon->sellt] = selmon->lts[selmon->curtag];
+   selmon->mfact = selmon->mfacts[selmon->curtag];
+   selmon->nmaster = selmon->nmasters[selmon->curtag];
+   if (selmon->showbar != selmon->showbars[selmon->curtag])
+      togglebar (NULL);
    focus (NULL);
    arrange (selmon);
 }
-- 
1.8.4

